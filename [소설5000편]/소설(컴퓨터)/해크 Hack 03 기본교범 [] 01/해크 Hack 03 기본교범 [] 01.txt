
해킹정보..
1. 해커와 해킹이란?
1-1 해커란?
1-1-1 해커의 역사와 평가
1-1-2. 'GNU 선언문'과 우리가 배워야 할 점
1-2. 해킹이란?
1-2-1. 사례로 본 해킹의 유형과 예방법
가. 트로이 목마(Trojan Horse)
나. 쓰레기 주워 모으기(Scavenging)
다. 논리폭탄(Logic Bomb)
라. 살라미 기법(Salami Techniques)
마. 자료의 부정변개(Data Diddling)
바. 슈퍼 재핑(Super Zapping)
사. 트랩도어 (Trap Door)
아. 비동기성 공격(Asynchronous Attacks)
1-2-2. 최근 해킹 동향과 침투대상
가. IP 스푸핑(IP Spoofing)
나. 패킷 스니퍼링(Packet Sniffering)
다. Sendmail 버그
1-2-3. 해커가되기위해 해야할것
1-2-4. 프로그래밍을 꼭 배워야하는가?
1. 해커와 해킹이란?
1-1 해커란?
1-1-1 해커의 역사와 평가
해커라는 단어는 60년대 미국 M.I.T 대학생들을 시작으로 전파되기
시작하였습니다. 그들은 컴퓨터를 광적으로 좋아하고 그들의 이상을 컴퓨터에
걸었습니다. 밤낮으로 컴퓨터에 매달려 새로운 프로그램을 만들고 토론하며
창조와 정의를 부르짖었습니다. 그러한 결과
스티브워즈니악,리차드스톨만,스티브잡스 와 같은 위대한 해커라 일컬어지는
인물이 탄생했으며 그들의 영향을 받아 현재와 같은 컴퓨터환경을 구축하게
된것입니다. 초기에 그들은 구식 대형 컴퓨터를 이용하고 전화를 공짜로
사용하는 방법을 전파시켰으며 스스로 그러한 장비를 만들어 팔기까지 했습니다.
과거의 순수한 열정을 지닌 해커들은 거의 '히피'족이나 다름없는 이상을 이야기
했습니다. 시간이 지나고 세상이 변하면서 초기 해커들의 숫자는 점차
줄어들었고 대다수 변질되어 본래 해커의 의미인 '정보의 공유화'가 아닌
'정보엿보기'가 되어갔습니다. 그 결과 '캐빈미트닉'같은 악명높은 해커도
등장하게 되었던 것이죠. 해커들의 업적은 다양합니다. 그들은 아무나 널리
복사해서 사용할 수 있다록 "Copyright"에 반대되는 개념인 "Copyleft" 를
사용했으며 그 누구라도 출처만 밝히고 공익적인 것에 이용된다면 자신의 자료를
사용해도 된다고 적어놓았습니다. 그결과 대표적으로 "linux"같은 공개 유닉스
운영체제가 탄생하여 오늘날까지 널리 사용되고 있습니다. 그덕에 비싼
유닉스운영체제를 공짜로 아무나 사용할 수 있게되었으며 그로인해 보다 더 좋은
각종 공개 프로그램들이 속속 생겨나고 있는것입니다.
해커들은 이것을 'GNU'라는 헌장으로 만들어 지키고 있습니다. 여러분이 진정한
해커가 되고자한다면 "GNU"헌장을 꼼꼼히 읽어보고 수긍할 수 있을때에
하십시오. 단지 남에게 과시하고 골탕 먹이기위해서 한다면 해커가 될 자격이
없는 사람일것입니다.
1-1-2. 'GNU 선언문'과 우리가 배워야 할 점
다음은 '리차드 스톨만'이라는 20세기의 위대한 해커의 'GNU선언문'입니다. 'GNU
선언문'은 해커의 권리장전이나 마찬가지인 선언문입니다. 모든 해커는 다음의
GNU헌장을 충실히 이행하여여 합니다. ----- CNU선언문은 용량상 삭제했습니다.
------ 이 'GNU 선언문'에서 우리가 배워야 할점이 있습니다. 초기 해커들이
지향하고자 했던 바로 이러한 순수함이죠. 권위와 억압에 얽매이지 않는 표현과
사상의 자유로움과 모두에게 도움이 되는 세상의 소금이 되고자 했던 선각자들의
발자취를 따라야 합니다. 아직도 이 'GNU 선언문'을 충실히 받들고있는 해커들이
많이 남아있기에 우리의 컴퓨터 문화는 더욱 발전되어갈것이라 확신합니다.
1-2. 해킹이란?
1-2-1. 사례로 본 해킹의 유형과 예방법
'해킹'은 직접적으로 컴퓨터에 침투하여 목적된 일을 수행하는 것을 의미합니다.
'해킹'에는 여러 가지 방법이 있겠으나 몇가지로 구분하면 다음과 같습니다.
여기에 나타난 방법들은 '크래커'들이 주로 사용했던 방법들입니다.
가. 트로이 목마(Trojan Horse) 트로이목마 는 고대 역사에 나오는 이야기로
유명합니다. 즉, 상대방이 눈치채지 못하게 몰래 숨어드는 것을 의미하죠.
정상적인 프로그램에 부정 루틴이나 명령어를 삽입해 정상적인 작업을 수행하나
부정 결과를 얻 어내고 즉시 부정 루틴을 삭제하기 때문에 발견이 어렵게
됩니다. 시스팀 프로그래머,프로그램 담당 관리자,오퍼레이터,외부 프로그램
용역자가 저지르며 시스팀 로그인 테이프와 운용 기록이 있는 프로그램 리스트를
확보한 후 정상적인 프로그램 실행 결과와 의심스런 프로그램 결과를 비교하는
일이 예방책입니다. 철저한 감독만이 최선의 길입니다. 예전에 개봉된 영화
"네트(THE NET)"에서도 이 방법이 나옵니다. 겉으로 보기엔 아주 지극히
정상적인 프로그램인데 실은 사용자의 정보를 빼내가는 트로이 목마 가 원래
정체였었죠.
나. 쓰레기 주워 모으기(Scavenging) 아주 지저분한 수법이죠 컴퓨터실에서
작업하면서 쓰레기통에 버린 프로그램 리스트, 데이터 리스트, 카피 자료를 얻는
방 법입니다. 많은 사람들이 자신이 버리는 쓰레기가 다른 사람들의 손에 들어갈
경우 자신을 위협할 수 있는 무기가 된다는 사실을 인식하지 못하기 때문에
이러한 일이 벌어지죠. 중요한 것은 꼭 알아볼수 없도록 폐기해야 합니다.
예전에 미 FBI에서 소련의 스파이를 잡을 때 썼던 방법입니다. 스파이 혐의를
받고있는 용의자의 쓰레기통을 뒤져 증거가 될만한 문건들을 찾아 내었죠.
다. 논리폭탄(Logic Bomb) '논리폭탄' 이라는 방법으로 자료나 소프트웨어
파괴에 이용하죠. 즉, 프로그램에 어떤 조건을 넣어주고 그 조건이 만족되면
자동으로 불법 결과가 나타나게 하는 것으로 '트로이목마'와 유사한 면을 가지고
있습니다. 예를들어 예전에 중국에 나타난 바이러스중에서 '이붕 바이러스'란게
있었습니다. 프로그램 실행중에 바이러스가 질문을 합니다. "당신은 이붕의
퇴진을 원합니까?" 만약 "no"를 입력한다면 컴퓨터의 자료는 모조리
파괴되어버리고 말았죠. 대만이나 중국의 반체제 인사가 만들었다는 얘기가
있었습니다. 자료변조가 예상되는 경로로의 자료 입수를 철저를 조사해야만
합니다.
라. 살라미 기법(Salami Techniques) 예전에 우리나라를 시끄럽게 했던 청와대
아이디 도용사건과 유사한 경우입니다. 그당시에 휴면계좌의 작은단위의 금액을
한 구좌로 몰아넣게해서 빼내렸던 시도가 있었죠. 이자 계산이나 다른 거래 계산
풀그림 속에 단위수 이하의 숫자를 특정 계좌에 계속 가산되도록 풀그림 루틴을
부정 삽입하는 행위입니다. 뚜렷한 피해자가 없어 특별히 검사해 보는 제도를
두지 않으면 알 수 없고 일단 제작되면 별도 수정 없이는 범행상태가 계속되죠.
은행직원이나 외부인등 전산망에 접근할 수 있는 자라면 누구나 저지를수 있으며
계좌중에 아주 작은 금액이 계속적으로 입금된 사실이 있는지 검사하는 풀그림을
작성해 수행시 켜 보는 방법 등을 사용해 예방합니다.
마. 자료의 부정변개(Data Diddling) 원시 서류 자체를 변조, 위조해 끼워
넣거나 바꿔치기 하는 수법으로 자기 테이프나 디스크 속에 엑스트라 바이트를
만들어 두었다가 데이터를 추가하는 수법입니다. 자료를 코드로 바꾸면서 다른
것으로 바꿔치기하는 수법인데 원시자료 준비자, 자료 운반자 ,자료 용역처리자
그리고 데이타와 접근이 가능한 내부인이 주로 저지릅니다. 예방법은 원시서류와
입력 데이터를 대조해 보고 셈틀 처리 결과가 예상 결과와 같은지 검토 하며
시스팀 로그인파일과 수작업으로 작성된 관련 일지를 서로 비교 검토하는 작업을
정기적으 로 실시하여야 합니다. 아주 직접적이며 초보적인 형태의 해킹이라고
할 수 있습니다. 예를들어 은행원이 자신이 직접 단말기를 조작해 원하는 계좌로
돈을 빼내는 경우가 이에 해당 됩니다.
바. 슈퍼 재핑(Super Zapping) 컴퓨터가 고장으로 가동이 불가능할 때
비상용으로 쓰이는 프로그램이 수퍼 잽입니다. 수퍼 잽 수행시에 호텔의
만능키처럼 패스워드나 각종 보안장치 기능을 상실 시켜 컴퓨터의 기억장치에
수록된 모든 파일에 접근해 자료를 복사해 가죠. 외부에서 출입해 수리를 할
경우 입회하여 지키고 테이프나 디스크팩,디스켓 반출시에 내용을 확인하고 고장
내용이 수록된 파일을 복사해 가지고 나갈 경우 내용을 복사해 증거물을 남기는
법이 최선책입니다. 이 방법은 거의 직접적인 수법이기에 계속 지키고 확인하는
수밖에 없습니다.
사. 트랩도어 (Trap Door) OS나 대형 응용 프로그램을 개발하면서 전체
시험실행을 할 때 발견되는 오류를 쉽게 하거나 처 음부터 중간에 내용을 볼 수
있는 부정루틴을 삽입해 컴퓨터의 정비나 유지보수를 핑계삼아 컴퓨터 내부의
자료를 뽑아 가는 행위를 일컫습니다. 즉, 프로그래머가 프로그램 내부에 일종의
비밀통로를 만들어 두는것입니다 자신만이 드나들 수 있게하여 자료를 빼내는
방법이죠. 실제로 풀그림을 수행시키면서 중간에 이상한 것이 출력되지 않는지와
어떤 메시지가 나타나지 않았나 살펴보고 이상한 자료의 누출이나 어카운트에는
계산된 것이 없는데 기계시간이 사용된 경우 추적하여 찾아내야 합니다.
아. 비동기성 공격(Asynchronous Attacks) 컴퓨터 중앙 처리 장치 속도와
입.출력 장치 속도가 다른 점을 이용해 Multi-programming을 할 때
Check-point를 써서 자료를 입수하는 방법이죠. 어떤 자료와 프로그램이
누출된것 같은 의심이 생기거나 컴퓨터 성능과 출력 자료가 정상이 아닐 때
시스팀 로그인 테이프를 분석해 작업 지시서와 대조해 지시없이 작업을 수행한
기록이 있는지 조사해 봐야합니다. 이 방법은 최근에도 이용되고 있는
방법입니다. 사용하기 쉽고 효과는 상당히 큰 해킹방법중의 하나죠. 미리
작성해둔 침투 프로그램으로 시스템 운영자를 속인채 목적하는 해킹을
하는것입니다.
1-2-2. 최근 해킹 동향과 침투대상
해킹에는 위에서 말한것처럼 여러 가지 유형이 있습니다. 최근 CERT(Computer
Emergency Response Team) - 컴퓨터 보안에 관련된 그룹 -에 따르면 가장 많이
발생하는 침투방법으로 IP Spoofing, Packet Sniffering, NFS Attacks, Sendmail
Attack, Nerwork Scanning 등이 있다는 보고입니다. 최신 해킹동향을 보면
다음과 같습니다.
가. IP 스푸핑(IP Spoofing)
인터넷 프로토콜인 TCP/IP의 구조적 결함, 즉 TCP 시퀀스번호, 소스라우팅, 소스
주소를 이용한 인증(Authentication) 메커니즘 등을 이용한 방법으로써
인증(Authentication) 기능을 가지고 있는 시스팀을 침입하기 위해 침입자가
사용하는 시스팀을 원래의 호스트로 위장하는 방법입니다. 즉, 이 방법은 자신이
침투하고자 하는 컴퓨터를 무력화하기위해 자신이 그 컴퓨터인것처럼 가장하는
것입니다. 아무리 방어가 잘 되어있는 컴퓨터라도 자기자신을 경계하지는 않기
때문이죠. 이러한 방법으로 NASA나 미 국방부까지 뚫을수있는 최고의
방법입니다. 전에 붙잡힌 미국의 악질 해커 '미트닉'도 이 방법의 대가입니다.
나. 패킷 스니퍼링(Packet Sniffering)
최근 널리 쓰이고 있는 대표적인 방법으로 tcpdump, snoop, sniffer 등과 같은
네트워크 모니터링 툴을 이용해 네트워크 내에 돌아다니는 패킷의 내용을 분석해
정보를 알아내는 것입니다. 이 방법은 네트워크에 연동돼 있는 호스트뿐만
아니라 외부에서 내부 네트워크로 접속하는 모든 호스트가 위험 대상이되죠.
이를위해 해커는 먼저 자신의 시스팀이나 보안 취약점을 가지고 있는 시스템에
침입하여 루트 (ROOT) -주인- 권한을 획득합니다. 그후 이 시스템에 다시
로그인하기 위해 백도어(뒷구멍)를 설치한 후 그 시스템이 속해 있는 네트워크
상의 모든 ftp, 텔넷 그리고 rlogin 세션의 처음 128개의 문자를 가로챌 수 있는
네트워 크 모니터링 툴을 설치해 실행하는 것입니다. 이 패킷 스니퍼링은 일종의
엿보기로서 효과는 확실하나 실력자가 행할 방법은 아닙니다.
다. Sendmail 버그
Sendmail은 네트워크 간에 메일을 전송해 주기 위해 만들어진 메일전송
프로그램입니다. 이 프로그램은 TCP/IP, UUCP, BIT NET 등 다른 네트워크 간의
전송도 가능하게 하므로 거의 모든 유닉스 기종에서 사용되고 있죠. 따라서
Security Hole(보안상의 헛점)이 발견되면 그 여파가 어떤것보다 큽니다. 대부분
자사 유닉스에 버전 5의 이 프로그램을 함께 배포하는데, 많은 버그를 가지고
있는 것으 로 알려지고 있죠. 88년에 인터넷에 연결돼 있던 7천 5백대의
컴퓨터가 정지되어 사상최대의 해킹사건으로 기록된 '인터넷 웜(InternetWorm)'
사건 때에는 'debug'라는 버그로 인해서였습니다. 당시 이 '인터넷 웜'사건으로
엄청난 혼란과 충격이 있었고 이로인해 'CERT'가 결성되게 되었습 니다.
아직까지도 많은 문제점을 지니고 있다고 할 수 있습니다. 이외에 몇가지
수법들이 더 있는데 자세한 얘기는 뒤에서 다루겠습니다. 그럼 해커들이
침투하기 좋아하고 침투를 즐겨하는 곳에는 어떤곳이 있을까요? 침투하기 가장
쉬운곳은 운영체제의 설치를 방금 끝낸 호스트입니다. 인터넷에서 중요한
게이트웨이나 서비스 호스트들은 성격상 OS를 업그레이드 하거나 새로운 OS를
설치하는 경우에 사용자들이 이용하지 못하므로 대부분 언제 새로운 OS를
설치한다는 것을 네트워크를 통해서 공지하게 되죠. 하지만 OS 설치를 막 끝낸
호스트는 루트의 패스워드가 없거나 보안 검사(Security Check) 기능이 거의
작동되지 않는 상황이므로 누구나 쉽게 침투할 수 있습니다. '새술은 새 부대에'
라는 말이 있으나 '새로운 호스트는 새로운 주인에게'로 바뀌어야 하겠군요.
이러한 침투대상에는 상업 통신망을 빼놓을수 없습니다. 하이텔, 천리안, 나우콤
등과 같은 상업 통신망은 인터넷과 연결되기 이전부터 자체적으로 내부의
네트워크를 사용하고 있었죠. 그러나 실제 서비스 이용자들은 유닉스 위에서
작동되고 있는 메인 프로그램에서 빠져 나오는 경우가 거의 없었으므로 서비스를
하고 있는 유닉스 호스트와 네트워크는 허술하게 세팅돼 있었던게 사실입니다.
즉, 자체의 메인 프로그램이나 방화벽만을 믿고 허술하게 관리하다 큰 코 다치는
경우입니다. 예전에도 몇가지 버그로 인해 유닉스 상태에서 해킹을 당했던
사건이 있었습니다. 또한 아이네트나 코넷 같은 인터넷 서비스 공급업체나 이
업체에 연동해서 인터넷 서비스를 받는 기관 역시 많은 문제점을 안고 있습니다.
망서비스를 하는 회사는 각 서비스마다 전담하는 인원을 두게 마련인데, 이런
경우 한 호스트에서 시스팀을 총체적으로 관리할 수 없어서 여러 가지 잠재적인
문제점을 안게 되는것이죠.
1-2-3. 해커가되기위해 해야할것
'해커'가 되기 위해서는 무엇을 해야할까요?
물론 여기서 말하는 '해커'란 좋은뜻의 해커입니다. 남의 시스템에 몰래
침투하기나 하는 그릇된 자들은 '해커'가 아닙니다 '해커'나와라 뚝딱! 한다고
해커가 되지는 않습니다. 무엇이든 마찬가지 겠지만 해커가 되기위해서는 항상
최선을 다해 노력하는 자세가 필요합니다. 초보자라도 해커가 되기위한 가장
빠른 방법을 소개하면, 첫째, 관련 서적을 본다. 우리나라에도 몇종의 해커관련
서적이 나와있지만 모두 함량미달의 내용들입니다. 본 서적의 경우도 가급적
최선의 선택이 되도록 쉽고 자세하게 적어갈려고 노력을 하고 있으나 악용될
영향도 있기에 주저되는 부분도 많습니다. 그래도 본 서적같이 쉽고 자세하며,
실제적인 기술적 정보가 많이 들어있는 책을 권합니다. 원서를 보는 방법도
좋으나 원서에서 나타나는 해킹방법이래야 실제적인 내용은 ㉰버린 속빈강정이
대부분이라는 것을 아시길 바랍니다. 국내 서적이 원서보다 훨씬 질이 좋고
자세한 경우가 많습니다. 이 책 한권으로도 해커에 대한 모든 것을 알수있게끔
구성했으니 자세히 보시기 바랍니다. 둘째, PC 통신을 활용한다. 책을 보며
공부한 후에는 PC통신을 이용해 많은 자료와 정보를 찾아 나서야 합니다. 국내
대형통신망에도 미미하지만 해커관련 동호회도 있으니 참여해보는것도 좋은
방법이라고 봅니다. 책보다는 좀더 빠른 최신 정보를 얻을 수 있을것이며 특히
자신보다 실력있고 경험많은 선배들로부터의 조언도 들을수 있어서 실력을
일취월장 할 수 있을겁니다. 셋째, 인터넷으로 나가본다. 인터넷을 정보의 바다
라고 하죠. 인터넷에는 수많은 컴퓨터들이 연결되어있고 해커와 관련된 정보만
다루는 곳을 찾으려고해도 1주일은 꼬박 밤새울 정도로 많이 있습니다. 우선
국내 PC통신망이나 서적등에서 인터넷에 존재하는 해커관련 사이트를 알아내어
직접 찾아가 봐야합니다. 물론 영어라서 보기 답답하지만 끈기있게 지켜본다면
자신의 실력을 몇배로 늘릴수 있을것입니 다. 넷째, 항상 생각하라 해킹이란
것이 기존의 기술적인 부분을 배워서 안다는 것은 사실상 한계가 있습니다.
끊임없이 새로운 지식을 습득하고 창조하는 습관을 길러야 합니다. 물론 보안도
마찬가지죠 항상 주의깊게 보는 사고를 기르며 상대가 간과하고 있는 틈새를
파고들어야 하는 것입니다. 이러한 방법들로 여러분도 해커가 될 수 있습니다.
처음부터 너무 무리한 욕심을 가지지 말고 천천히 하나씩 밟아나가는 자세가
중요합니다. 어느샌가 자신도 남에게 도움을 줄 수 있는 해커의 반열에 오를 수
있다는 자신감을 가지세요. 필자도 불과 몇 년전만 해도 여러분과 똑같은
위치에서 시작했다는 사실을 알아두시길... 그럼 구체적으로 무엇을 공부해야
할지 알아볼까요? 해커가 되기 위해서 공부해야 할 것은 사실 엄청나게
많습니다. 하지만 간략하게 나눠본다면, 유닉스와 도스를 포함한 운영체제,
어셈블리 와 C를 포함한 프로그래밍 언어, 인터넷, 바이러스와 백신, 디버그와
소프트아이스를 이요한 크랙 등으로 나눌수 있겠습니다. 위에 열거한 것들은
가장 기본적인 과제들입니다. 이것들을 모두 숙지하고 하드웨어적인 부분까지
공부한다면 그야말로 무적해커 가 되겠지요. 해커가 되기위해서는 부단히
노력하는 방법밖에는 없습니다. 남을 도울수 있는 위치에 서는게 쉬운게 아니죠.
1-2-4. 프로그래밍을 꼭 배워야하는가?
해커가 되기 위해 프로그래밍을 꼭 배워야 할까요? 대답은 "프로그래밍을
배워두면 더욱 좋다"입니다. 프로그래밍을 어렵고 딱딱하게 생각하는 사람들이
많습니다. 초심자의 경우 C언어를 공부하기로 하고 책을 폈으나 '작심 하루'가
되는 경우가 대부분이죠. 이럴 경우 가장 쉬운 C언어 책을 추천받아서 실제로
옆에 펴놓으면서 따라해보는게 좋습니다. 주로 '유닉스 시스템 C 프로그래밍' 과
'어셈블리'에 대한 서적을 참조하시기 바랍니다. 이러한 부분들이 결코 만만한
과제는 아닙니다. 그러나, 당장 프로그래밍을 모른다고 걱정하지는 마십시오.
이러한 프로그래밍을 배워두면 더욱 전문적인 기술을 구사할 수 있고 응용할 수
있는 기반이기 때문입니다. 최소한 이게 C소스이고 저게 어셈블리 소스
정도라는것만 알아도 가능성은 충분합니다.
               다음 정보로..
               
